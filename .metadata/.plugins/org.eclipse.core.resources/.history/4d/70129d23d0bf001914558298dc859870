import java.util.Arrays;

public class CheckPossibility {
	
	public int findUnsortedSubarray(int[] nums) {
        
		int[] dup = nums;
		Arrays.sort(dup);	
		
		int start =0;
		int end = nums.length-1;
		while(start<=end && nums[start] == dup[start] ) {
			start++;
		}
		
		
		while(start<=end&& nums[end] == dup[end] ) {
			end--;
		}
		
		
		
		return start-end+1 ;
    }
    public boolean checkPossibility(int[] nums) {
        int numberOfVariations =0;
        if(nums.length<=2){
            return true;
        }
        for(int i=0; i<nums.length-1; i++){
            
            if(nums[i]>nums[i+1] ){
            	//System.out.println(nums[i]);
                numberOfVariations++;
                if(numberOfVariations>1){
                    return false;
                }
                if(i>0) {
                	if(nums[i-1]<=nums[i+1])
                	{
                		nums[i] = nums[i-1];
                	}
                	else {
                		 nums[i+1] = nums[i];
                	}
                }
            	
                
            }
        }
        //System.out.println(numberOfVariations);
        return true;
    }
		
	public static void main(String[] args) {
		System.out.println(new CheckPossibility().findUnsortedSubarray(new int[] {1, 5,4,6,7,10,8,9}));
	}
}
